{"remainingRequest":"/Users/alfifaisal/timerapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alfifaisal/timerapp/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alfifaisal/timerapp/src/App.vue","mtime":1695035413783},{"path":"/Users/alfifaisal/timerapp/node_modules/cache-loader/dist/cjs.js","mtime":1695034926297},{"path":"/Users/alfifaisal/timerapp/node_modules/babel-loader/lib/index.js","mtime":1695034926354},{"path":"/Users/alfifaisal/timerapp/node_modules/vuetify-loader/lib/loader.js","mtime":1695034926375},{"path":"/Users/alfifaisal/timerapp/node_modules/cache-loader/dist/cjs.js","mtime":1695034926297},{"path":"/Users/alfifaisal/timerapp/node_modules/vue-loader/lib/index.js","mtime":1695034926458}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navbar from '@/components/Navbar';\nimport Timer from '@/components/Timer';\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n    Timer\n  },\n  data () {\n    return {\n      timerState: 'stopped',\n      currentTimer: 0,\n      formattedTime: \"00:00:00\",\n      ticker: undefined,\n      laps: [],\n      latestLap: \"\",\n      snackbar: false\n    }\n  },\n  methods: {\n    start () {\n      if (this.timerState !== 'running') {\n        this.tick();\n        this.timerState = 'running';\n      }\n    },\n    lap () {\n      this.snackbar = true;\n      this.laps.push({\n        seconds: this.currentTimer,\n        formattedTime: this.formatTime(this.currentTimer)\n      });\n      this.latestLap = this.formatTime(this.currentTimer);\n      this.currentTimer = 0;\n    },\n    pause () {\n      window.clearInterval(this.ticker);\n      this.timerState = 'paused';\n    },\n    stop () {\n      window.clearInterval(this.ticker)\n      this.currentTimer = 0;\n      this.formattedTime = \"00:00:00\";\n      this.timerState = \"stopped\";\n    },\n    tick () {\n      this.ticker = setInterval(() => {\n        this.currentTimer++;\n        this.formattedTime = this.formatTime(this.currentTimer);\n      }, 250)\n    },\n    formatTime (seconds) {\n      let measuredTime = new Date(null);\n      measuredTime.setSeconds(seconds);\n      let MHSTime = measuredTime.toISOString().substr(11, 8);\n      return MHSTime;\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <Navbar :laps=\"laps\" />\n\n    <v-content>\n      <Timer\n        :timer=\"formattedTime\"\n        :state=\"timerState\"\n        @start=\"start\"\n        @lap=\"lap\"\n        @pause=\"pause\"\n        @stop=\"stop\"\n      />\n    </v-content>\n\n    <v-snackbar\n      v-model=\"snackbar\"\n      color=\"info\"\n      :timeout=\"2000\"\n    >\n      New Lap {{ this.latestLap }}\n      <v-btn dark flat @click=\"snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </v-app>\n</template>\n\n<script>\nimport Navbar from '@/components/Navbar';\nimport Timer from '@/components/Timer';\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n    Timer\n  },\n  data () {\n    return {\n      timerState: 'stopped',\n      currentTimer: 0,\n      formattedTime: \"00:00:00\",\n      ticker: undefined,\n      laps: [],\n      latestLap: \"\",\n      snackbar: false\n    }\n  },\n  methods: {\n    start () {\n      if (this.timerState !== 'running') {\n        this.tick();\n        this.timerState = 'running';\n      }\n    },\n    lap () {\n      this.snackbar = true;\n      this.laps.push({\n        seconds: this.currentTimer,\n        formattedTime: this.formatTime(this.currentTimer)\n      });\n      this.latestLap = this.formatTime(this.currentTimer);\n      this.currentTimer = 0;\n    },\n    pause () {\n      window.clearInterval(this.ticker);\n      this.timerState = 'paused';\n    },\n    stop () {\n      window.clearInterval(this.ticker)\n      this.currentTimer = 0;\n      this.formattedTime = \"00:00:00\";\n      this.timerState = \"stopped\";\n    },\n    tick () {\n      this.ticker = setInterval(() => {\n        this.currentTimer++;\n        this.formattedTime = this.formatTime(this.currentTimer);\n      }, 250)\n    },\n    formatTime (seconds) {\n      let measuredTime = new Date(null);\n      measuredTime.setSeconds(seconds);\n      let MHSTime = measuredTime.toISOString().substr(11, 8);\n      return MHSTime;\n    }\n  }\n}\n</script>\n"]}]}